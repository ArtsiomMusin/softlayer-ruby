var search_data = {"index":{"searchIndex":["array","hash","softlayer","apiparameterfilter","account","baremetalserver","baremetalserverorder","baremetalserverorder_package","client","config","dynamicattribute","classmethods","dynamicattributedefinition","modelbase","objectfilter","objectfilterblockhandler","objectfilteroperation","objectmaskparser","objectmaskparsererror","objectmaskproperty","objectmasktoken","objectmasktokenizer","productitemcategory","productpackage","server","service","ticket","virtualserver","virtualserverorder","string","symbol","xmlrpc","client","convert","[]()","[]()","_to_sl_object_mask_property()","_to_sl_object_mask_property()","_to_sl_object_mask_property()","_to_sl_object_mask_property()","account_for_client()","add_child()","add_children()","authentication_headers()","availablelocations()","bare_metal_instance?()","bare_metal_instance_package()","bare_metal_server_packages()","bare_metal_servers()","begins_with()","build()","call_softlayer_api_with_params()","can_merge_with?()","cancel!()","cancel!()","cancellation_reasons()","capture_image()","category()","change_port_speed()","client_settings()","configuration()","contains()","contains_exactly()","core_options()","core_options()","create_object_options()","create_object_options()","create_standard_ticket()","current_token()","datacenter_options()","datacenter_options()","datacenter_options()","default_client()","default_client=()","default_object_mask()","default_object_mask()","default_object_mask()","default_object_mask()","default_object_mask()","default_option()","disk_options()","disk_options()","does_not_contain()","end_of_string?()","ends_with()","environment_settings()","eql?()","error_for_unexpected_token()","fault()","file_settings()","find_servers()","find_servers()","globals_settings()","hardware_instance_template()","hardware_order()","has_sl_property?()","has_updates?()","included()","inspect()","invalid?()","is()","is_greater_or_equal_to()","is_greater_than()","is_less_or_equal_to()","is_less_than()","is_not()","location_id_for_datacenter_name()","mask_root_marker?()","max_port_speed_options()","max_port_speed_options()","memory_options()","merge()","method_missing()","method_missing()","more_tokens?()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_token()","notes=()","object_filter()","object_filter()","object_mask()","object_mask()","object_with_id()","object_with_id()","open_tickets()","os_reference_code_options()","os_reference_code_options()","package_with_id()","packages_with_key_name()","parse()","parse_property()","parse_property_child()","parse_property_name()","parse_property_sequence()","parse_property_set()","parse_property_type()","parse_property_type_name()","place_order!()","place_order!()","place_order!()","query_to_filter_operation()","recognize_token()","refresh_details()","related_service_named()","reload_os!()","required?()","required_categories()","result_limit()","result_limit()","server_admin_ticket?()","server_object_filter()","server_object_id()","server_object_mask()","server_result_limit()","server_result_offset()","server_with_id()","server_with_id()","servers()","service()","service()","service()","service()","service()","service()","service()","service_named()","set_domain!()","set_hostname!()","should_update?()","sl_attr()","sl_dynamic_attr()","sl_dynamic_attr_definition()","softlayer_properties()","softlayer_properties()","softlayer_properties()","target()","ticket_subjects()","ticket_with_id()","to_ary()","to_ary()","to_h()","to_s()","to_s()","to_sl_object_mask()","to_update()","update()","upgrade_ram!()","upgrade_cores!()","upgrade_max_port_speed!()","upgrade_options()","user_metadata=()","valid_property_name?()","valid_property_type?()","verify()","verify()","verify()","virtual_guest_template()","virtual_server_package()","virtual_servers()","wait_until_ready()","contributionguide","foundation","modellayer","welcome","cla-corporate","cla-individual"],"longSearchIndex":["array","hash","softlayer","softlayer::apiparameterfilter","softlayer::account","softlayer::baremetalserver","softlayer::baremetalserverorder","softlayer::baremetalserverorder_package","softlayer::client","softlayer::config","softlayer::dynamicattribute","softlayer::dynamicattribute::classmethods","softlayer::dynamicattribute::dynamicattributedefinition","softlayer::modelbase","softlayer::objectfilter","softlayer::objectfilterblockhandler","softlayer::objectfilteroperation","softlayer::objectmaskparser","softlayer::objectmaskparsererror","softlayer::objectmaskproperty","softlayer::objectmasktoken","softlayer::objectmasktokenizer","softlayer::productitemcategory","softlayer::productpackage","softlayer::server","softlayer::service","softlayer::ticket","softlayer::virtualserver","softlayer::virtualserverorder","string","symbol","xmlrpc","xmlrpc::client","xmlrpc::convert","softlayer::client#[]()","softlayer::modelbase#[]()","array#_to_sl_object_mask_property()","hash#_to_sl_object_mask_property()","string#_to_sl_object_mask_property()","symbol#_to_sl_object_mask_property()","softlayer::account::account_for_client()","softlayer::objectmaskproperty#add_child()","softlayer::objectmaskproperty#add_children()","softlayer::client#authentication_headers()","softlayer::productpackage#availablelocations()","softlayer::baremetalserver#bare_metal_instance?()","softlayer::productpackage::bare_metal_instance_package()","softlayer::productpackage::bare_metal_server_packages()","softlayer::account#bare_metal_servers()","softlayer::objectfilterblockhandler#begins_with()","softlayer::objectfilter::build()","softlayer::service#call_softlayer_api_with_params()","softlayer::objectmaskproperty#can_merge_with?()","softlayer::baremetalserver#cancel!()","softlayer::virtualserver#cancel!()","softlayer::baremetalserver::cancellation_reasons()","softlayer::virtualserver#capture_image()","softlayer::productpackage#category()","softlayer::server#change_port_speed()","softlayer::config::client_settings()","softlayer::productpackage#configuration()","softlayer::objectfilterblockhandler#contains()","softlayer::objectfilterblockhandler#contains_exactly()","softlayer::baremetalserverorder::core_options()","softlayer::virtualserverorder::core_options()","softlayer::baremetalserverorder::create_object_options()","softlayer::virtualserverorder::create_object_options()","softlayer::ticket::create_standard_ticket()","softlayer::objectmasktokenizer#current_token()","softlayer::baremetalserverorder::datacenter_options()","softlayer::productpackage#datacenter_options()","softlayer::virtualserverorder::datacenter_options()","softlayer::client::default_client()","softlayer::client::default_client=()","softlayer::baremetalserver::default_object_mask()","softlayer::productpackage::default_object_mask()","softlayer::server::default_object_mask()","softlayer::ticket::default_object_mask()","softlayer::virtualserver::default_object_mask()","softlayer::productitemcategory#default_option()","softlayer::baremetalserverorder::disk_options()","softlayer::virtualserverorder::disk_options()","softlayer::objectfilterblockhandler#does_not_contain()","softlayer::objectmasktoken#end_of_string?()","softlayer::objectfilterblockhandler#ends_with()","softlayer::config::environment_settings()","softlayer::objectmasktoken#eql?()","softlayer::objectmasktoken::error_for_unexpected_token()","xmlrpc::convert::fault()","softlayer::config::file_settings()","softlayer::baremetalserver::find_servers()","softlayer::virtualserver::find_servers()","softlayer::config::globals_settings()","softlayer::baremetalserverorder#hardware_instance_template()","softlayer::baremetalserverorder_package#hardware_order()","softlayer::modelbase#has_sl_property?()","softlayer::ticket#has_updates?()","softlayer::dynamicattribute::included()","softlayer::objectmasktoken#inspect()","softlayer::objectmasktoken#invalid?()","softlayer::objectfilterblockhandler#is()","softlayer::objectfilterblockhandler#is_greater_or_equal_to()","softlayer::objectfilterblockhandler#is_greater_than()","softlayer::objectfilterblockhandler#is_less_or_equal_to()","softlayer::objectfilterblockhandler#is_less_than()","softlayer::objectfilterblockhandler#is_not()","softlayer::productpackage#location_id_for_datacenter_name()","softlayer::objectmasktoken#mask_root_marker?()","softlayer::baremetalserverorder::max_port_speed_options()","softlayer::virtualserverorder::max_port_speed_options()","softlayer::virtualserverorder::memory_options()","softlayer::objectmaskproperty#merge()","softlayer::apiparameterfilter#method_missing()","softlayer::service#method_missing()","softlayer::objectmasktokenizer#more_tokens?()","softlayer::productpackage#name()","softlayer::apiparameterfilter::new()","softlayer::baremetalserverorder::new()","softlayer::baremetalserverorder_package::new()","softlayer::client::new()","softlayer::dynamicattribute::dynamicattributedefinition::new()","softlayer::modelbase::new()","softlayer::objectfilter::new()","softlayer::objectfilteroperation::new()","softlayer::objectmaskparser::new()","softlayer::objectmaskproperty::new()","softlayer::objectmasktoken::new()","softlayer::objectmasktokenizer::new()","softlayer::productitemcategory::new()","softlayer::server::new()","softlayer::service::new()","softlayer::virtualserverorder::new()","softlayer::objectmasktokenizer#next_token()","softlayer::server#notes=()","softlayer::apiparameterfilter#object_filter()","softlayer::service#object_filter()","softlayer::apiparameterfilter#object_mask()","softlayer::service#object_mask()","softlayer::apiparameterfilter#object_with_id()","softlayer::service#object_with_id()","softlayer::ticket::open_tickets()","softlayer::baremetalserverorder::os_reference_code_options()","softlayer::virtualserverorder::os_reference_code_options()","softlayer::productpackage::package_with_id()","softlayer::productpackage::packages_with_key_name()","softlayer::objectmaskparser#parse()","softlayer::objectmaskparser#parse_property()","softlayer::objectmaskparser#parse_property_child()","softlayer::objectmaskparser#parse_property_name()","softlayer::objectmaskparser#parse_property_sequence()","softlayer::objectmaskparser#parse_property_set()","softlayer::objectmaskparser#parse_property_type()","softlayer::objectmaskparser#parse_property_type_name()","softlayer::baremetalserverorder#place_order!()","softlayer::baremetalserverorder_package#place_order!()","softlayer::virtualserverorder#place_order!()","softlayer::objectfilter::query_to_filter_operation()","softlayer::objectmaskparser#recognize_token()","softlayer::modelbase#refresh_details()","softlayer::service#related_service_named()","softlayer::server#reload_os!()","softlayer::productitemcategory#required?()","softlayer::productpackage#required_categories()","softlayer::apiparameterfilter#result_limit()","softlayer::service#result_limit()","softlayer::ticket#server_admin_ticket?()","softlayer::apiparameterfilter#server_object_filter()","softlayer::apiparameterfilter#server_object_id()","softlayer::apiparameterfilter#server_object_mask()","softlayer::apiparameterfilter#server_result_limit()","softlayer::apiparameterfilter#server_result_offset()","softlayer::baremetalserver::server_with_id()","softlayer::virtualserver::server_with_id()","softlayer::account#servers()","softlayer::account#service()","softlayer::baremetalserver#service()","softlayer::modelbase#service()","softlayer::productitemcategory#service()","softlayer::productpackage#service()","softlayer::ticket#service()","softlayer::virtualserver#service()","softlayer::client#service_named()","softlayer::server#set_domain!()","softlayer::server#set_hostname!()","softlayer::dynamicattribute::dynamicattributedefinition#should_update?()","softlayer::modelbase::sl_attr()","softlayer::dynamicattribute::classmethods#sl_dynamic_attr()","softlayer::dynamicattribute::classmethods#sl_dynamic_attr_definition()","softlayer::modelbase#softlayer_properties()","softlayer::server#softlayer_properties()","softlayer::ticket#softlayer_properties()","softlayer::service#target()","softlayer::ticket::ticket_subjects()","softlayer::ticket::ticket_with_id()","softlayer::modelbase#to_ary()","softlayer::service#to_ary()","softlayer::objectfilteroperation#to_h()","softlayer::objectmaskproperty#to_s()","softlayer::server#to_s()","hash#to_sl_object_mask()","softlayer::dynamicattribute::dynamicattributedefinition#to_update()","softlayer::ticket#update()","softlayer::virtualserver#upgrade_ram!()","softlayer::virtualserver#upgrade_cores!()","softlayer::virtualserver#upgrade_max_port_speed!()","softlayer::virtualserver#upgrade_options()","softlayer::server#user_metadata=()","softlayer::objectmasktoken#valid_property_name?()","softlayer::objectmasktoken#valid_property_type?()","softlayer::baremetalserverorder#verify()","softlayer::baremetalserverorder_package#verify()","softlayer::virtualserverorder#verify()","softlayer::virtualserverorder#virtual_guest_template()","softlayer::productpackage::virtual_server_package()","softlayer::account#virtual_servers()","softlayer::virtualserver#wait_until_ready()","","","","","",""],"info":[["Array","","Array.html","","<p>SoftLayer Extensions to the Array class to support using arrays to create\nobject masks\n"],["Hash","","Hash.html","","<p>This extension to the Hash class to allows object masks to be constructed\nfrom built-in Ruby types and …\n"],["SoftLayer","","SoftLayer.html","","<p>Copyright © 2014 SoftLayer Technologies, Inc. All rights reserved.\n<p>Permission is hereby granted, free …\n"],["SoftLayer::APIParameterFilter","","SoftLayer/APIParameterFilter.html","","<p>An <code>APIParameterFilter</code> is an intermediary object that\nunderstands how to accept the other API parameter …\n"],["SoftLayer::Account","","SoftLayer/Account.html","",""],["SoftLayer::BareMetalServer","","SoftLayer/BareMetalServer.html","","<p>This class represents a Bare Metal Server, a hardware server in contrast to\na virtual machine, in the …\n"],["SoftLayer::BareMetalServerOrder","","SoftLayer/BareMetalServerOrder.html","","<p>This class allows you to order a Bare Metal Server by providing a simple\nset of attributes for the newly …\n"],["SoftLayer::BareMetalServerOrder_Package","","SoftLayer/BareMetalServerOrder_Package.html","","<p>This class is used to order a hardware server using a product package.\n<p>Ordering a server using a product …\n"],["SoftLayer::Client","","SoftLayer/Client.html","","<p>Initialize an instance of the Client class. You pass in the service name\nand optionally hash arguments …\n"],["SoftLayer::Config","","SoftLayer/Config.html","","<p>The SoftLayer Config class is responsible for providing the key information\nthe library needs to communicate …\n"],["SoftLayer::DynamicAttribute","","SoftLayer/DynamicAttribute.html","","<p>This module is inteneded to be used by classes in the SoftLayer object\nmodel. It creates a small DSL …\n"],["SoftLayer::DynamicAttribute::ClassMethods","","SoftLayer/DynamicAttribute/ClassMethods.html","",""],["SoftLayer::DynamicAttribute::DynamicAttributeDefinition","","SoftLayer/DynamicAttribute/DynamicAttributeDefinition.html","","<p>The DynamicAttributeDefinition inner class is to collect and store\ninformation about how and when a  …\n"],["SoftLayer::ModelBase","","SoftLayer/ModelBase.html","","<p>The SoftLayer Gem defines an Object Hierarchy representing entities in an\naccount&#39;s SoftLayer environment. …\n"],["SoftLayer::ObjectFilter","","SoftLayer/ObjectFilter.html","","<p>An ObjectFilter is a tool that, when passed to the SoftLayer API allows the\nAPI server to filter, or …\n"],["SoftLayer::ObjectFilterBlockHandler","","SoftLayer/ObjectFilterBlockHandler.html","","<p>This class defines the routines that are valid within the block provided to\na call to ObjectFilter.build …\n"],["SoftLayer::ObjectFilterOperation","","SoftLayer/ObjectFilterOperation.html","","<p>A class whose instances represent an Object Filter operator and the value\nit is applied to.\n"],["SoftLayer::ObjectMaskParser","","SoftLayer/ObjectMaskParser.html","","<p>A parser that can examine and validate SoftLayer Object Mask strings\n<p>The Object Mask Parser parses Object …\n"],["SoftLayer::ObjectMaskParserError","","SoftLayer/ObjectMaskParserError.html","",""],["SoftLayer::ObjectMaskProperty","","SoftLayer/ObjectMaskProperty.html","","<p>A class representing a SoftLayer Object&#39;s property as represented in an\nObject Mask.\n<p>The Object Mask …\n"],["SoftLayer::ObjectMaskToken","","SoftLayer/ObjectMaskToken.html","","<p>This class is an implementation detail of the Object Mask Parser It\nrepresents a single semantic token …\n"],["SoftLayer::ObjectMaskTokenizer","","SoftLayer/ObjectMaskTokenizer.html","","<p>This class is an implementation detail of the ObjectMaskParser\n<p>It takes an Object Mask String and breaks …\n"],["SoftLayer::ProductItemCategory","","SoftLayer/ProductItemCategory.html","","<p>The goal of this class is to make it easy for scripts (and scripters) to\ndiscover what product configuration …\n"],["SoftLayer::ProductPackage","","SoftLayer/ProductPackage.html","","<p>Each SoftLayer ProductPackage provides information about ordering a product\nor service from SoftLayer …\n"],["SoftLayer::Server","","SoftLayer/Server.html","","<p>Server is the base class for VirtualServer and BareMetalServer. It\nimplements some functionality common …\n"],["SoftLayer::Service","","SoftLayer/Service.html","","<p>SoftLayer API Service\n<p>Instances of this class are the runtime representation of services in the\nSoftLayer …\n"],["SoftLayer::Ticket","","SoftLayer/Ticket.html","",""],["SoftLayer::VirtualServer","","SoftLayer/VirtualServer.html","","<p>Instance of this class represent servers that are virtual machines in the\nSoftLayer environment.\n<p>This …\n"],["SoftLayer::VirtualServerOrder","","SoftLayer/VirtualServerOrder.html","","<p>VirtualServerOrder orders virtual servers using\nSoftLayer_Virtual_Guest::createObject.\n<p>sldn.softlayer.com/reference/services/SoftLayer_Virtual_Guest/createObject\n…\n"],["String","","String.html","","<p>SoftLayer Extensions to the String class to support using strings to create\nobject masks\n"],["Symbol","","Symbol.html","","<p>SoftLayer Extensions to the Symbol class to support using symbols to create\nobject masks\n"],["XMLRPC","","XMLRPC.html","",""],["XMLRPC::Client","","XMLRPC/Client.html","",""],["XMLRPC::Convert","","XMLRPC/Convert.html","","<p>The XML-RPC spec calls for the “faultCode” in faults to be an integer but\nthe SoftLayer XML-RPC …\n"],["[]","SoftLayer::Client","SoftLayer/Client.html#method-i-5B-5D","(service_name)",""],["[]","SoftLayer::ModelBase","SoftLayer/ModelBase.html#method-i-5B-5D","(softlayer_property)","<p>Returns the value of of the given property as stored in the softlayer_hash.\nThis gives you access to …\n"],["_to_sl_object_mask_property","Array","Array.html#method-i-_to_sl_object_mask_property","()","<p>Returns a string representing the object mask content represented by the\nArray. Each value in the array …\n"],["_to_sl_object_mask_property","Hash","Hash.html#method-i-_to_sl_object_mask_property","()","<p>Returns a string representing the hash as a property within a larger object\nmask. This routine is an …\n"],["_to_sl_object_mask_property","String","String.html#method-i-_to_sl_object_mask_property","()","<p>Returns a string representing the object mask content represented by the\nString. Strings are simply represented …\n"],["_to_sl_object_mask_property","Symbol","Symbol.html#method-i-_to_sl_object_mask_property","()","<p>Converts the Symbol to a string, then converts the string to an object mask\nproperty. This routine is …\n"],["account_for_client","SoftLayer::Account","SoftLayer/Account.html#method-c-account_for_client","(client = nil)","<p>Using the login credentials in the client, retrieve the account associated\nwith those credentials.\n"],["add_child","SoftLayer::ObjectMaskProperty","SoftLayer/ObjectMaskProperty.html#method-i-add_child","(new_child)",""],["add_children","SoftLayer::ObjectMaskProperty","SoftLayer/ObjectMaskProperty.html#method-i-add_children","(new_children)",""],["authentication_headers","SoftLayer::Client","SoftLayer/Client.html#method-i-authentication_headers","()","<p>return a hash of the authentication headers for the client\n"],["availableLocations","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-i-availableLocations","","<p>The list of locations where this product package is available.\n"],["bare_metal_instance?","SoftLayer::BareMetalServer","SoftLayer/BareMetalServer.html#method-i-bare_metal_instance-3F","()","<p>Returns true if this <code>BareMetalServer</code> is actually a Bare Metal\nInstance a Bare Metal Instance is physical, …\n"],["bare_metal_instance_package","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-c-bare_metal_instance_package","(client = nil)","<p>Returns the ProductPackage of the package used to order Bare Metal Servers\nwith simplified configuration …\n"],["bare_metal_server_packages","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-c-bare_metal_server_packages","(client = nil)","<p>Returns an array of ProductPackages, each of which can be used as the\nfoundation to order a bare metal …\n"],["bare_metal_servers","SoftLayer::Account","SoftLayer/Account.html#method-i-bare_metal_servers","","<p>The Bare Metal Servers (physical hardware) associated with the account.\nUnless you force these to update, …\n"],["begins_with","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-begins_with","(value)","<p>Matches when the value is found at the beginning of the field. This search\nis not case sensitive\n"],["build","SoftLayer::ObjectFilter","SoftLayer/ObjectFilter.html#method-c-build","(key_path, query = nil, &block)","<p>Builds an object filter with the given key path, a dot separated list of\nproperty keys. The filter itself …\n"],["call_softlayer_api_with_params","SoftLayer::Service","SoftLayer/Service.html#method-i-call_softlayer_api_with_params","(method_name, parameters, args)","<p>Issue an HTTP request to call the given method from the SoftLayer API with\nthe parameters and arguments …\n"],["can_merge_with?","SoftLayer::ObjectMaskProperty","SoftLayer/ObjectMaskProperty.html#method-i-can_merge_with-3F","(other_property)",""],["cancel!","SoftLayer::BareMetalServer","SoftLayer/BareMetalServer.html#method-i-cancel-21","(reason = :unneeded, comment = '')","<p>Sends a ticket asking that a server be cancelled (i.e. shutdown and removed\nfrom the account).\n<p>The <code>cancellation_reason</code> …\n"],["cancel!","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-i-cancel-21","()","<p>IMMEDIATELY cancel this virtual server\n"],["cancellation_reasons","SoftLayer::BareMetalServer","SoftLayer/BareMetalServer.html#method-c-cancellation_reasons","()","<p>Returns a list of the cancellation reasons to use when cancelling a server.\n<p>When cancelling a server with …\n"],["capture_image","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-i-capture_image","(image_name, include_attached_storage = false, image_notes = '')","<p>Capture a disk image of this virtual server for use with other servers.\n<p>image_name will become the name …\n"],["category","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-i-category","(category_code)","<p>Returns the product category with the given category code (or nil if one\ncannot be found)\n"],["change_port_speed","SoftLayer::Server","SoftLayer/Server.html#method-i-change_port_speed","(new_speed, public = true)","<p>Change the current port speed of the server\n<p><code>new_speed</code> is expressed Mbps and should be 0, 10, 100, or 1000.\n…\n"],["client_settings","SoftLayer::Config","SoftLayer/Config.html#method-c-client_settings","(provided_settings = {})",""],["configuration","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-i-configuration","","<p>The set of product categories needed to make an order for this product\npackage.\n"],["contains","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-contains","(value)","<p>Matches when the value is found within the field the search is not case\nsensitive\n"],["contains_exactly","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-contains_exactly","(value)","<p>Matches when the value is found within the field the search <em>is</em>\ncase sensitive\n"],["core_options","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-c-core_options","(client = nil)",""],["core_options","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-c-core_options","(client = nil)","<p>Return a list of values that are valid for the :cores attribute\n"],["create_object_options","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-c-create_object_options","(client = nil)","<p>The first time this is called it requests\nSoftLayer_Hardware::getCreateObjectOptions from the API and …\n"],["create_object_options","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-c-create_object_options","(client = nil)","<p>The first time this is called it requests\nSoftLayer_Virtual_Guest::getCreateObjectOptions: from the  …\n"],["create_standard_ticket","SoftLayer::Ticket","SoftLayer/Ticket.html#method-c-create_standard_ticket","(options = {})","<p>Create and submit a new support Ticket to SoftLayer.\n<p>The options parameter should contain:\n<p><strong><code>:client</code></strong> - The …\n"],["current_token","SoftLayer::ObjectMaskTokenizer","SoftLayer/ObjectMaskTokenizer.html#method-i-current_token","()",""],["datacenter_options","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-c-datacenter_options","(client = nil)","<p>Return a list of values that are valid for the :datacenter attribute\n"],["datacenter_options","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-i-datacenter_options","()",""],["datacenter_options","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-c-datacenter_options","(client = nil)","<p>Return a list of values that are valid for the :datacenter attribute\n"],["default_client","SoftLayer::Client","SoftLayer/Client.html#method-c-default_client","()",""],["default_client=","SoftLayer::Client","SoftLayer/Client.html#method-c-default_client-3D","(new_default)",""],["default_object_mask","SoftLayer::BareMetalServer","SoftLayer/BareMetalServer.html#method-c-default_object_mask","()","<p>Returns the default object mask used when fetching servers from the API\nwhen an explicit object mask …\n"],["default_object_mask","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-c-default_object_mask","(root)",""],["default_object_mask","SoftLayer::Server","SoftLayer/Server.html#method-c-default_object_mask","()","<p>returns the default object mask for all servers structured as a hash so\nthat the classes BareMetalServer …\n"],["default_object_mask","SoftLayer::Ticket","SoftLayer/Ticket.html#method-c-default_object_mask","()","<p>Returns the default object mask,as a hash, that is used when retrieving\nticket information from the  …\n"],["default_object_mask","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-c-default_object_mask","()","<p>Returns the default object mask used when fetching servers from the API\n"],["default_option","SoftLayer::ProductItemCategory","SoftLayer/ProductItemCategory.html#method-i-default_option","()","<p>If the category has a single option (regardless of fees) this method will\nreturn that option.  If the …\n"],["disk_options","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-c-disk_options","(client = nil)","<p>Return a list of values that are valid the array given to the :disks\n"],["disk_options","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-c-disk_options","(client = nil)","<p>Return a list of values that are valid the array given to the :disks\n"],["does_not_contain","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-does_not_contain","(value)","<p>Matches when the value is not found within the field the search <em>is</em>\ncase sensitive\n"],["end_of_string?","SoftLayer::ObjectMaskToken","SoftLayer/ObjectMaskToken.html#method-i-end_of_string-3F","()",""],["ends_with","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-ends_with","(value)","<p>Matches when the value is found at the end of the field. This search is not\ncase sensitive\n"],["environment_settings","SoftLayer::Config","SoftLayer/Config.html#method-c-environment_settings","()",""],["eql?","SoftLayer::ObjectMaskToken","SoftLayer/ObjectMaskToken.html#method-i-eql-3F","(other_token)",""],["error_for_unexpected_token","SoftLayer::ObjectMaskToken","SoftLayer/ObjectMaskToken.html#method-c-error_for_unexpected_token","(token)",""],["fault","XMLRPC::Convert","XMLRPC/Convert.html#method-c-fault","(hash)",""],["file_settings","SoftLayer::Config","SoftLayer/Config.html#method-c-file_settings","(*additional_files)",""],["find_servers","SoftLayer::BareMetalServer","SoftLayer/BareMetalServer.html#method-c-find_servers","(options_hash = {})","<p>Retrieve a list of Bare Metal servers from the account\n<p>The options parameter should contain:\n<p><strong><code>:client</code></strong> - …\n"],["find_servers","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-c-find_servers","(options_hash = {})","<p>Retrieve a list of virtual servers from the account.\n<p>The options parameter should contain:\n<p><strong><code>:client</code></strong> - The …\n"],["globals_settings","SoftLayer::Config","SoftLayer/Config.html#method-c-globals_settings","()",""],["hardware_instance_template","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-i-hardware_instance_template","()","<p>Returns a hash of the creation options formatted to be sent to the\nSoftLayer API for either verification …\n"],["hardware_order","SoftLayer::BareMetalServerOrder_Package","SoftLayer/BareMetalServerOrder_Package.html#method-i-hardware_order","()","<p>Construct and return a hash representing a\n<code>SoftLayer_Container_Product_Order_Hardware_Server</code> based on …\n"],["has_sl_property?","SoftLayer::ModelBase","SoftLayer/ModelBase.html#method-i-has_sl_property-3F","(softlayer_property)","<p>Returns true if the given property can be found in the softlayer hash\n"],["has_updates?","SoftLayer::Ticket","SoftLayer/Ticket.html#method-i-has_updates-3F","()","<p>Returns true if the ticket has “unread” updates\n"],["included","SoftLayer::DynamicAttribute","SoftLayer/DynamicAttribute.html#method-c-included","(included_in)",""],["inspect","SoftLayer::ObjectMaskToken","SoftLayer/ObjectMaskToken.html#method-i-inspect","()",""],["invalid?","SoftLayer::ObjectMaskToken","SoftLayer/ObjectMaskToken.html#method-i-invalid-3F","()",""],["is","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-is","(value)","<p>Matches when the value in the field is exactly equal to the given value.\nThis is a case-sensitive match …\n"],["is_greater_or_equal_to","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-is_greater_or_equal_to","(value)","<p>Matches when the value in the field is greater than or equal to the given\nvalue\n"],["is_greater_than","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-is_greater_than","(value)","<p>Matches when the value in the field is greater than the given value\n"],["is_less_or_equal_to","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-is_less_or_equal_to","(value)","<p>Matches when the value in the field is less than or equal to the given\nvalue\n"],["is_less_than","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-is_less_than","(value)","<p>Matches when the value in the field is less than the given value\n"],["is_not","SoftLayer::ObjectFilterBlockHandler","SoftLayer/ObjectFilterBlockHandler.html#method-i-is_not","(value)","<p>Matches is the value in the field does not exactly equal the value passed\nin.\n"],["location_id_for_datacenter_name","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-i-location_id_for_datacenter_name","(datacenter_name)","<p>Given a datacenter name that was returned by datacenter_options, use\ninformation in the package to retrieve …\n"],["mask_root_marker?","SoftLayer::ObjectMaskToken","SoftLayer/ObjectMaskToken.html#method-i-mask_root_marker-3F","()",""],["max_port_speed_options","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-c-max_port_speed_options","(client = nil)","<p>Returns a list of the :max_port_speeds\n"],["max_port_speed_options","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-c-max_port_speed_options","(client = nil)","<p>Returns a list of the :max_port_speeds\n"],["memory_options","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-c-memory_options","(client = nil)","<p>Return a list of values that are valid for the :memory attribute\n"],["merge","SoftLayer::ObjectMaskProperty","SoftLayer/ObjectMaskProperty.html#method-i-merge","(other_property)","<p>DANGER: assumes you&#39;ve already checked can_merge_with? before calling\nthis routine!\n"],["method_missing","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-method_missing","(method_name, *args, &block)","<p>This allows the filters to be used at the end of a long chain of calls that\nends at a service.  It forwards …\n"],["method_missing","SoftLayer::Service","SoftLayer/Service.html#method-i-method_missing","(method_name, *args, &block)","<p>This is the primary mechanism by which requests are made. If you call the\nservice with a method it doesn&#39;t …\n"],["more_tokens?","SoftLayer::ObjectMaskTokenizer","SoftLayer/ObjectMaskTokenizer.html#method-i-more_tokens-3F","()",""],["name","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-i-name","","<p>A friendly, readable name for the package\n"],["new","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-c-new","(target, starting_parameters = nil)","<p>Construct a filter with the given target (and starting parameters if given)\n"],["new","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-c-new","(client = nil)","<p>Create a new order that works thorugh the given client connection\n"],["new","SoftLayer::BareMetalServerOrder_Package","SoftLayer/BareMetalServerOrder_Package.html#method-c-new","(package, client = nil)","<p>You initialize a BareMetalServerOrder_Package by passing in the package\nthat you are ordering from.\n"],["new","SoftLayer::Client","SoftLayer/Client.html#method-c-new","(options = {})","<p>Clients are built with a number of settings:\n<p><strong><code>:username</code></strong> - The username of the account you\nwish to access …\n"],["new","SoftLayer::DynamicAttribute::DynamicAttributeDefinition","SoftLayer/DynamicAttribute/DynamicAttributeDefinition.html#method-c-new","(attribute_name)",""],["new","SoftLayer::ModelBase","SoftLayer/ModelBase.html#method-c-new","(softlayer_client, network_hash)","<p>Construct a new model object in the environment of the given client and\nwith the given hash of network …\n"],["new","SoftLayer::ObjectFilter","SoftLayer/ObjectFilter.html#method-c-new","()","<p>The default initialize for a hash is overridden so that object filters\ncreate sub-filters when asked …\n"],["new","SoftLayer::ObjectFilterOperation","SoftLayer/ObjectFilterOperation.html#method-c-new","(operator, value)",""],["new","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-c-new","()",""],["new","SoftLayer::ObjectMaskProperty","SoftLayer/ObjectMaskProperty.html#method-c-new","(name, type = nil)",""],["new","SoftLayer::ObjectMaskToken","SoftLayer/ObjectMaskToken.html#method-c-new","(token_type, token_value = nil)",""],["new","SoftLayer::ObjectMaskTokenizer","SoftLayer/ObjectMaskTokenizer.html#method-c-new","(mask_string)",""],["new","SoftLayer::ProductItemCategory","SoftLayer/ProductItemCategory.html#method-c-new","(softlayer_client, network_hash, is_required)","<p>The ProductItemCategory class augments the base initialization by accepting\na boolean variable, <code>is_required</code> …\n"],["new","SoftLayer::Server","SoftLayer/Server.html#method-c-new","(softlayer_client, network_hash)","<p>Construct a server from the given client using the network data found in\n<code>network_hash</code>\n<p>Most users should …\n"],["new","SoftLayer::Service","SoftLayer/Service.html#method-c-new","(service_name, options = {})",""],["new","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-c-new","(client = nil)","<p>Create a new order that works thorugh the given client connection\n"],["next_token","SoftLayer::ObjectMaskTokenizer","SoftLayer/ObjectMaskTokenizer.html#method-i-next_token","()",""],["notes=","SoftLayer::Server","SoftLayer/Server.html#method-i-notes-3D","(new_notes)","<p>Change the notes of the server raises ArgumentError if you pass nil as the\nnotes\n"],["object_filter","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-object_filter","(filter)","<p>Adds an object_filter to the result. An Object Filter allows you to specify\ncriteria which are used to …\n"],["object_filter","SoftLayer::Service","SoftLayer/Service.html#method-i-object_filter","(filter)","<p>Add an object filter to the request.\n"],["object_mask","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-object_mask","(*args)","<p>Use this as part of a method call chain to add an object mask to the\nrequest. The arguments to object …\n"],["object_mask","SoftLayer::Service","SoftLayer/Service.html#method-i-object_mask","(*args)","<p>Use this as part of a method call chain to add an object mask to the\nrequest. The arguments to object …\n"],["object_with_id","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-object_with_id","(value)","<p>Adds an API filter that narrows the scope of a call to an object with a\nparticular ID. For example, if …\n"],["object_with_id","SoftLayer::Service","SoftLayer/Service.html#method-i-object_with_id","(object_of_interest)","<p>Use this as part of a method call chain to identify a particular object as\nthe target of the request. …\n"],["open_tickets","SoftLayer::Ticket","SoftLayer/Ticket.html#method-c-open_tickets","(options = {})","<p>Returns the set of currently open tickets\n<p>Options should contain:\n<p><strong><code>:client</code></strong> - the client in which to search …\n"],["os_reference_code_options","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-c-os_reference_code_options","(client = nil)","<p>Returns a list of the valid :os_refrence_codes\n"],["os_reference_code_options","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-c-os_reference_code_options","(client = nil)","<p>Returns a list of the valid :os_refrence_codes\n"],["package_with_id","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-c-package_with_id","(package_id, client = nil)","<p>Requests a list (array) of ProductPackages whose key names match the one\npassed in.\n"],["packages_with_key_name","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-c-packages_with_key_name","(key_name, client = nil)","<p>Requests a list (array) of ProductPackages whose key names match the one\npassed in.\n"],["parse","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-i-parse","(mask_string)",""],["parse_property","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-i-parse_property","(tokenizer)",""],["parse_property_child","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-i-parse_property_child","(tokenizer)",""],["parse_property_name","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-i-parse_property_name","(tokenizer)",""],["parse_property_sequence","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-i-parse_property_sequence","(tokenizer)",""],["parse_property_set","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-i-parse_property_set","(tokenizer)",""],["parse_property_type","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-i-parse_property_type","(tokenizer)",""],["parse_property_type_name","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-i-parse_property_type_name","(tokenizer)",""],["place_order!","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-i-place_order-21","()","<p>Calls the SoftLayer API to place an order for a new server based on the\ntemplate in this order. If this …\n"],["place_order!","SoftLayer::BareMetalServerOrder_Package","SoftLayer/BareMetalServerOrder_Package.html#method-i-place_order-21","()","<p>Submit the order to be executed by the SoftLayer ordering system. If\nsuccessful this will probably result …\n"],["place_order!","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-i-place_order-21","()","<p>Calls the SoftLayer API to place an order for a new virtual server based on\nthe template in this order. …\n"],["query_to_filter_operation","SoftLayer::ObjectFilter","SoftLayer/ObjectFilter.html#method-c-query_to_filter_operation","(query)","<p>This method simplifies creating correct object filter structures by\ndefining a simple query language. …\n"],["recognize_token","SoftLayer::ObjectMaskParser","SoftLayer/ObjectMaskParser.html#method-i-recognize_token","(tokenizer, expected_type, error_string, &predicate)",""],["refresh_details","SoftLayer::ModelBase","SoftLayer/ModelBase.html#method-i-refresh_details","(object_mask = nil)","<p>Asks a model object to reload itself from the SoftLayer API.\n<p>Subclasses should not override this method, …\n"],["related_service_named","SoftLayer::Service","SoftLayer/Service.html#method-i-related_service_named","(service_name)","<p>Returns a related service with the given service name. The related service\nwill use the same client as …\n"],["reload_os!","SoftLayer::Server","SoftLayer/Server.html#method-i-reload_os-21","(token = '', provisioning_script_uri = nil, ssh_keys = nil)","<p>Begins an OS reload on this server.\n<p>The OS reload can wipe out the data on your server so this method …\n"],["required?","SoftLayer::ProductItemCategory","SoftLayer/ProductItemCategory.html#method-i-required-3F","()","<p>Returns true if this category is required in its package\n"],["required_categories","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-i-required_categories","()","<p>Returns an array of the required categories in this package\n"],["result_limit","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-result_limit","(offset, limit)","<p>Adds a result limit which helps you page through a long list of entities\n<p>The offset is the index of the …\n"],["result_limit","SoftLayer::Service","SoftLayer/Service.html#method-i-result_limit","(offset, limit)","<p>Use this as part of a method call chain to reduce the number of results\nreturned from the server. For …\n"],["server_admin_ticket?","SoftLayer::Ticket","SoftLayer/Ticket.html#method-i-server_admin_ticket-3F","()","<p>Returns true if the ticket is a server admin ticket\n"],["server_object_filter","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-server_object_filter","()","<p>A utility method that returns the object filter (if any) stored with this\nfilter.\n"],["server_object_id","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-server_object_id","()","<p>A utility method that returns the server object ID (if any) stored in this\nparameter set.\n"],["server_object_mask","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-server_object_mask","()","<p>A utility method that returns the object mask (if any) stored in this\nparameter set.\n"],["server_result_limit","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-server_result_limit","()","<p>A utility method that returns the starting index of the result limit (if\nany) stored in this parameter …\n"],["server_result_offset","SoftLayer::APIParameterFilter","SoftLayer/APIParameterFilter.html#method-i-server_result_offset","()","<p>A utility method that returns the starting index of the result limit offset\n(if any) stored in this parameter …\n"],["server_with_id","SoftLayer::BareMetalServer","SoftLayer/BareMetalServer.html#method-c-server_with_id","(server_id, options = {})","<p>Retrive the bare metal server with the given server ID from the SoftLayer\nAPI\n<p>The options parameter should …\n"],["server_with_id","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-c-server_with_id","(server_id, options = {})","<p>Retrive the virtual server with the given server ID from the API\n<p>The options parameter should contain: …\n"],["servers","SoftLayer::Account","SoftLayer/Account.html#method-i-servers","()","<p>Get a list of the servers for the account. The list returned includes both\nbare metal and virtual servers …\n"],["service","SoftLayer::Account","SoftLayer/Account.html#method-i-service","()",""],["service","SoftLayer::BareMetalServer","SoftLayer/BareMetalServer.html#method-i-service","()","<p>Returns the SoftLayer Service used to work with this Server For Bare Metal\nServers that is <code>SoftLayer_Hardware</code> …\n"],["service","SoftLayer::ModelBase","SoftLayer/ModelBase.html#method-i-service","()","<p>The service method of a Model object should return a SoftLayer Service that\nbest represents the modeled …\n"],["service","SoftLayer::ProductItemCategory","SoftLayer/ProductItemCategory.html#method-i-service","()",""],["service","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-i-service","()",""],["service","SoftLayer::Ticket","SoftLayer/Ticket.html#method-i-service","()","<p>Override of service from ModelBase. Returns the SoftLayer_Ticket service\nset up to talk to the ticket …\n"],["service","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-i-service","()","<p>Returns the SoftLayer Service that represents calls to this object For\nVirtualServers the service is …\n"],["service_named","SoftLayer::Client","SoftLayer/Client.html#method-i-service_named","(service_name, service_options = {})","<p>Returns a service with the given name.\n<p>If a service has already been created by this client that same …\n"],["set_domain!","SoftLayer::Server","SoftLayer/Server.html#method-i-set_domain-21","(new_domain)","<p>Change the domain of this server\n<p>Raises an ArgumentError if the new domain is nil or empty no further …\n"],["set_hostname!","SoftLayer::Server","SoftLayer/Server.html#method-i-set_hostname-21","(new_hostname)","<p>Change the hostname of this server Raises an ArgumentError if the new\nhostname is nil or empty\n"],["should_update?","SoftLayer::DynamicAttribute::DynamicAttributeDefinition","SoftLayer/DynamicAttribute/DynamicAttributeDefinition.html#method-i-should_update-3F","(&block)","<p>This method is used to provide behavior for the should_update_ predicate\nfor the attribute\n"],["sl_attr","SoftLayer::ModelBase","SoftLayer/ModelBase.html#method-c-sl_attr","(attribute_symbol, hash_key = nil)","<p>allows subclasses to define attributes as sl_attr sl_attr are attributes\nthat draw their value from the …\n"],["sl_dynamic_attr","SoftLayer::DynamicAttribute::ClassMethods","SoftLayer/DynamicAttribute/ClassMethods.html#method-i-sl_dynamic_attr","(attribute_name, &block)","<p>sl_dynamic_attr declares a new dynamic softlayer attribute and accepts a\nblock in which the should_update …\n"],["sl_dynamic_attr_definition","SoftLayer::DynamicAttribute::ClassMethods","SoftLayer/DynamicAttribute/ClassMethods.html#method-i-sl_dynamic_attr_definition","(attribute_name)",""],["softlayer_properties","SoftLayer::ModelBase","SoftLayer/ModelBase.html#method-i-softlayer_properties","(object_mask = nil)","<p>Subclasses should implement this method as part of enabling the\nrefresh_details fuctionality The implementation …\n"],["softlayer_properties","SoftLayer::Server","SoftLayer/Server.html#method-i-softlayer_properties","(object_mask = nil)","<p>Make an API request to SoftLayer and return the latest properties hash for\nthis object.\n"],["softlayer_properties","SoftLayer::Ticket","SoftLayer/Ticket.html#method-i-softlayer_properties","(object_mask = nil)","<p>Override from model base. Requests new details about the ticket from the\nserver.\n"],["target","SoftLayer::Service","SoftLayer/Service.html#method-i-target","()","<p>Added here so that the interface of this class matches that of\nAPIParameterFilter.  In APIParameterFilter …\n"],["ticket_subjects","SoftLayer::Ticket","SoftLayer/Ticket.html#method-c-ticket_subjects","(client = nil)","<p>Queries the SoftLayer API to retrieve a list of the valid ticket subjects.\n"],["ticket_with_id","SoftLayer::Ticket","SoftLayer/Ticket.html#method-c-ticket_with_id","(ticket_id, options = {})","<p>Find the ticket with the given ID and return it\n<p>Options should contain:\n<p><strong><code>:client</code></strong> - the client in which to …\n"],["to_ary","SoftLayer::ModelBase","SoftLayer/ModelBase.html#method-i-to_ary","()","<p>When printing to the console using puts, ruby will call the to_ary method\ntrying to convert an object …\n"],["to_ary","SoftLayer::Service","SoftLayer/Service.html#method-i-to_ary","()","<p>If this is not defined for Service, then when you print a service object\nthe code will try to convert …\n"],["to_h","SoftLayer::ObjectFilterOperation","SoftLayer/ObjectFilterOperation.html#method-i-to_h","()",""],["to_s","SoftLayer::ObjectMaskProperty","SoftLayer/ObjectMaskProperty.html#method-i-to_s","()",""],["to_s","SoftLayer::Server","SoftLayer/Server.html#method-i-to_s","()",""],["to_sl_object_mask","Hash","Hash.html#method-i-to_sl_object_mask","()","<p>Given a hash, generate an Object Mask string from the structure found\nwithin the hash. This allows object …\n"],["to_update","SoftLayer::DynamicAttribute::DynamicAttributeDefinition","SoftLayer/DynamicAttribute/DynamicAttributeDefinition.html#method-i-to_update","(&block)","<p>This method is used to provide the behavior for the update_! method for the\nattribute.\n"],["update","SoftLayer::Ticket","SoftLayer/Ticket.html#method-i-update","(body = nil)","<p>Add an update to this ticket.\n"],["upgrade_RAM!","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-i-upgrade_RAM-21","(ram_in_GB)","<p>This routine submits an order to change the RAM available to the virtual\nserver. Pass in the desired …\n"],["upgrade_cores!","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-i-upgrade_cores-21","(num_cores)","<p>This routine submits an order to upgrade the cpu count of the virtual\nserver. The order may result in …\n"],["upgrade_max_port_speed!","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-i-upgrade_max_port_speed-21","(network_speed_in_Mbps)","<p>This routine submits an order to change the maximum nic speed of the server\nPass in the desired speed …\n"],["upgrade_options","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-i-upgrade_options","","<p>A virtual server can find out about items that are available for upgrades.\n"],["user_metadata=","SoftLayer::Server","SoftLayer/Server.html#method-i-user_metadata-3D","(new_metadata)","<p>Change the user metadata for the server.\n"],["valid_property_name?","SoftLayer::ObjectMaskToken","SoftLayer/ObjectMaskToken.html#method-i-valid_property_name-3F","()",""],["valid_property_type?","SoftLayer::ObjectMaskToken","SoftLayer/ObjectMaskToken.html#method-i-valid_property_type-3F","()",""],["verify","SoftLayer::BareMetalServerOrder","SoftLayer/BareMetalServerOrder.html#method-i-verify","()","<p>Calls the SoftLayer API to verify that the template provided by this order\nis valid This routine will …\n"],["verify","SoftLayer::BareMetalServerOrder_Package","SoftLayer/BareMetalServerOrder_Package.html#method-i-verify","()","<p>Present the order for verification by the SoftLayer ordering system. The\norder is verified, but not executed. …\n"],["verify","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-i-verify","()","<p>Calls the SoftLayer API to verify that the template provided by this order\nis valid This routine will …\n"],["virtual_guest_template","SoftLayer::VirtualServerOrder","SoftLayer/VirtualServerOrder.html#method-i-virtual_guest_template","()","<p>Returns a hash of the creation options formatted to be sent to the\nSoftLayer API for either verification …\n"],["virtual_server_package","SoftLayer::ProductPackage","SoftLayer/ProductPackage.html#method-c-virtual_server_package","(client = nil)","<p>Returns the ProductPackage of the package used to order virtual servers At\nthe time of this writing, …\n"],["virtual_servers","SoftLayer::Account","SoftLayer/Account.html#method-i-virtual_servers","","<p>The virtual servers (aka. CCIs or Virtual_Guests) associated with the\naccount. Unless you force these …\n"],["wait_until_ready","SoftLayer::VirtualServer","SoftLayer/VirtualServer.html#method-i-wait_until_ready","(max_trials, wait_for_transactions = false, seconds_between_tries = 2)","<p>Repeatedly polls the API to find out if this server is &#39;ready&#39;.\n<p>The server is ready when it is …\n"],["Contribution Guide","","Contribution Guide_md.html","","<p>Contribution Guide\n<p>The <code>softlayer_api</code> Ruby Gem is an open source project and the\ndevelopers who use it …\n"],["Foundation","","Foundation_md.html","","<p>softlayer_api Foundation\n<p>The Foundation Layer of the <code>softlayer_api</code> Gem handles\ncommunication, authentication, …\n"],["Model Layer","","Model Layer_md.html","","<p>softlayer_api Model Layer\n<p>The Model Layer builds upon the Foundation layer and offers abstractions of\n…\n"],["Welcome","","Welcome_md.html","","<p>Welcome\n<p>The <code>softlyer_api</code> Ruby Gem provides a convenient way to call\ninto the SoftLayer API from the Ruby …\n"],["cla-corporate","","cla-corporate_md.html","","<p>International Business machines, Inc.\n<p>Software Grant and Corporate Contributor License Agreement (“Agreement”) …\n"],["cla-individual","","cla-individual_md.html","","<p>International Business Machines, Inc. (IBM)\n<p>Individual Contributor License Agreement (“Agreement”) …\n"]]}}